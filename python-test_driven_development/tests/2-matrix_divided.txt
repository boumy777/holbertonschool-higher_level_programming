>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Test 1 : Cas normal
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Test 2 : Matrice vide
>>> matrix_divided([], 5)
[]

# Test 3 : div=1 (éléments inchangés)
>>> matrix_divided([[2.0, 4.0], [6.0, 8.0]], 1)
[[2.0, 4.0], [6.0, 8.0]]

# Test 4 : div est un float
>>> matrix_divided([[10, 20], [30, 40]], 2.5)
[[4.0, 8.0], [12.0, 16.0]]

# Erreurs attendues :

# Test 5 : matrix n'est pas une liste de listes
>>> matrix_divided("pas une matrice", 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test 6 : éléments non numériques
>>> matrix_divided([[1, "2"], [3, 4]], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test 7 : lignes de tailles différentes
>>> matrix_divided([[1, 2], [3]], 1)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

# Test 8 : div n'est pas un nombre
>>> matrix_divided([[1, 2], [3, 4]], "3")
Traceback (most recent call last):
TypeError: div must be a number

# Test 9 : div = 0
>>> matrix_divided([[5]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero
